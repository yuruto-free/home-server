version: '3.7'

x-logging:
    &json-logging
    driver: json-file
    options:
        max-size: "1m"
        max-file: "3"

services:
    nas:
        image: dperson/samba:rpi
        container_name: nas
        volumes:
            - /mnt/portable_ssd/storage:/mnt/storage_space
        environment:
            TZ: 'Asia/Tokyo'
            USERID: '65534'
        networks:
            - frontend
        ports:
            - "137:137/udp"
            - "138:138/udp"
            - "139:139/tcp"
            - "445:445/tcp"
        tmpfs:
            - /tmp
        restart: always
        stdin_open: true
        tty: true
        command: '-s "storage;/mnt/storage_space;yes;no;yes;all;none;*;NAS on Raspberry Pi"'

    infrared_controller:
        build:
            context: ./infrared_controller
            dockerfile: Dockerfile
            args:
                TZ: 'Asia/Tokyo'
        image: custom_infrared_controller
        container_name: infrared_controller
        volumes:
            - ./infrared_controller/src:/infrared_controller:ro
        environment:
            - HTTP_PORT=8180
        networks:
            - irc_net
        expose:
            - 8180
        restart: always
        logging: *json-logging
        devices:
            - /dev/i2c-1:/dev/i2c-1

    nodered:
        build:
            context: ./nodered
            dockerfile: Dockerfile
        image: custom_nodered
        container_name: nodered
        volumes:
            - ./nodered/data:/data
        environment:
            - PORT=1880
            - TZ=Asia/Tokyo
            - FLOWS=/data/flows.json
        networks:
            - frontend
            - irc_net
        ports:
            - 1880:1880
        restart: always
        logging: *json-logging
        depends_on:
            - infrared_controller

    nginx:
        image: nginx:latest
        container_name: nginx
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./nginx/fastcgi_params:/etc/nginx/fastcgi_params:ro
            - phpmyadmin_data:/var/www/html/phpmyadmin:ro
        networks:
            - frontend
            - middle
        ports:
            - 8080:80
        restart: always
        logging: *json-logging
        depends_on:
            - web_server
            - phpmyadmin

    database:
        image: linuxserver/mariadb:10.5.15
        container_name: database
        volumes:
            - db_data:/var/lib/mysql
            - ./database/my.cnf:/etc/mysql/conf.d/my.cnf:ro
        env_file:
            - ./env_file/db/.env
        environment:
            - TZ=Asia/Tokyo
        networks:
            - backend
        expose:
            - 3306
        restart: always
        logging: *json-logging

    phpmyadmin:
        image: arm64v8/phpmyadmin:fpm-alpine
        container_name: phpmyadmin
        volumes:
            - pma_sessions:/sessions
            - phpmyadmin_data:/var/www/html
            - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php:ro
        env_file:
            - ./env_file/db/.env
        environment:
            - PMA_HOST=database
            - PMA_PORT=3306
            - PMA_ABSOLUTE_URI=http://localhost/phpmyadmin
        networks:
            - middle
            - backend
        expose:
            - 9000
        restart: always
        logging: *json-logging
        depends_on:
            - database

    web_server:
        build:
            context: ./web_server
            dockerfile: Dockerfile
            args:
                TZ: 'Asia/Tokyo'
        image: custom_web_server
        container_name: web_server
        volumes:
            - ./web_server/src:/home/node/app/src
        env_file:
            - ./env_file/db/.env
        environment:
            - TZ=+09:00
        networks:
            - middle
            - backend
        expose:
            - 3000
        restart: always
        logging: *json-logging
        depends_on:
            - database
            - nodered
        working_dir: /home/node/app

networks:
    frontend:
        name: frontend_network
    irc_net:
        name: infrared_controller_network
    middle:
        name: middle_network
    backend:
        name: backend_network

volumes:
    db_data:
        name: database
    pma_sessions:
        name: pma_sessions
    phpmyadmin_data:
        name: phpmyadmin
